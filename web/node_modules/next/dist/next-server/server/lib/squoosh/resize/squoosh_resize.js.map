{"version":3,"sources":["../../../../../../next-server/server/lib/squoosh/resize/squoosh_resize.js"],"names":["wasm","cachegetUint8Memory0","getUint8Memory0","buffer","memory","Uint8Array","WASM_VECTOR_LEN","passArray8ToWasm0","arg","malloc","ptr","length","set","cachegetInt32Memory0","getInt32Memory0","Int32Array","getArrayU8FromWasm0","len","subarray","resize","input_image","input_width","input_height","output_width","output_height","typ_idx","premultiply","color_space_conversion","ptr0","__wbindgen_malloc","len0","r0","r1","v1","slice","__wbindgen_free","load","module","imports","Response","WebAssembly","instantiateStreaming","e","headers","get","console","warn","bytes","arrayBuffer","instantiate","instance","Instance","init","input","Error","Request","URL","fetch","exports","__wbindgen_wasm_module","cleanup"],"mappings":"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","sourcesContent":["let wasm\n\nlet cachegetUint8Memory0 = null\nfunction getUint8Memory0() {\n  if (\n    cachegetUint8Memory0 === null ||\n    cachegetUint8Memory0.buffer !== wasm.memory.buffer\n  ) {\n    cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer)\n  }\n  return cachegetUint8Memory0\n}\n\nlet WASM_VECTOR_LEN = 0\n\nfunction passArray8ToWasm0(arg, malloc) {\n  const ptr = malloc(arg.length * 1)\n  getUint8Memory0().set(arg, ptr / 1)\n  WASM_VECTOR_LEN = arg.length\n  return ptr\n}\n\nlet cachegetInt32Memory0 = null\nfunction getInt32Memory0() {\n  if (\n    cachegetInt32Memory0 === null ||\n    cachegetInt32Memory0.buffer !== wasm.memory.buffer\n  ) {\n    cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer)\n  }\n  return cachegetInt32Memory0\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n  return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len)\n}\n/**\n * @param {Uint8Array} input_image\n * @param {number} input_width\n * @param {number} input_height\n * @param {number} output_width\n * @param {number} output_height\n * @param {number} typ_idx\n * @param {boolean} premultiply\n * @param {boolean} color_space_conversion\n * @returns {Uint8Array}\n */\nexport function resize(\n  input_image,\n  input_width,\n  input_height,\n  output_width,\n  output_height,\n  typ_idx,\n  premultiply,\n  color_space_conversion\n) {\n  var ptr0 = passArray8ToWasm0(input_image, wasm.__wbindgen_malloc)\n  var len0 = WASM_VECTOR_LEN\n  wasm.resize(\n    8,\n    ptr0,\n    len0,\n    input_width,\n    input_height,\n    output_width,\n    output_height,\n    typ_idx,\n    premultiply,\n    color_space_conversion\n  )\n  var r0 = getInt32Memory0()[8 / 4 + 0]\n  var r1 = getInt32Memory0()[8 / 4 + 1]\n  var v1 = getArrayU8FromWasm0(r0, r1).slice()\n  wasm.__wbindgen_free(r0, r1 * 1)\n  return v1\n}\n\nasync function load(module, imports) {\n  if (typeof Response === 'function' && module instanceof Response) {\n    if (typeof WebAssembly.instantiateStreaming === 'function') {\n      try {\n        return await WebAssembly.instantiateStreaming(module, imports)\n      } catch (e) {\n        if (module.headers.get('Content-Type') !== 'application/wasm') {\n          console.warn(\n            '`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n',\n            e\n          )\n        } else {\n          throw e\n        }\n      }\n    }\n\n    const bytes = await module.arrayBuffer()\n    return await WebAssembly.instantiate(bytes, imports)\n  } else {\n    const instance = await WebAssembly.instantiate(module, imports)\n\n    if (instance instanceof WebAssembly.Instance) {\n      return { instance, module }\n    } else {\n      return instance\n    }\n  }\n}\n\nasync function init(input) {\n  if (typeof input === 'undefined') {\n    // input = import.meta.url.replace(/\\.js$/, '_bg.wasm')\n    throw new Error('invariant')\n  }\n  const imports = {}\n\n  if (\n    typeof input === 'string' ||\n    (typeof Request === 'function' && input instanceof Request) ||\n    (typeof URL === 'function' && input instanceof URL)\n  ) {\n    input = fetch(input)\n  }\n\n  const { instance, module } = await load(await input, imports)\n\n  wasm = instance.exports\n  init.__wbindgen_wasm_module = module\n\n  return wasm\n}\n\nexport default init\n\n// Manually remove the wasm and memory references to trigger GC\nexport function cleanup() {\n  wasm = null\n  cachegetUint8Memory0 = null\n  cachegetInt32Memory0 = null\n}\n"]}