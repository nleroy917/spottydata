{"version":3,"sources":["../../../../../../next-server/server/lib/squoosh/png/squoosh_oxipng.js"],"names":["wasm","cachedTextDecoder","TextDecoder","ignoreBOM","fatal","decode","cachegetUint8Memory0","getUint8Memory0","buffer","memory","Uint8Array","getStringFromWasm0","ptr","len","subarray","WASM_VECTOR_LEN","passArray8ToWasm0","arg","malloc","length","set","cachegetInt32Memory0","getInt32Memory0","Int32Array","getArrayU8FromWasm0","optimise","data","level","retptr","__wbindgen_export_0","value","ptr0","__wbindgen_malloc","len0","r0","r1","v1","slice","__wbindgen_free","load","module","imports","Response","WebAssembly","instantiateStreaming","e","headers","get","console","warn","bytes","arrayBuffer","instantiate","instance","Instance","init","input","Error","wbg","__wbindgen_throw","arg0","arg1","Request","URL","fetch","exports","__wbindgen_wasm_module","cleanup"],"mappings":"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","sourcesContent":["import { TextDecoder } from '../text-decoder'\n\nlet wasm\n\nlet cachedTextDecoder = new TextDecoder('utf-8', {\n  ignoreBOM: true,\n  fatal: true,\n})\n\ncachedTextDecoder.decode()\n\nlet cachegetUint8Memory0 = null\nfunction getUint8Memory0() {\n  if (\n    cachegetUint8Memory0 === null ||\n    cachegetUint8Memory0.buffer !== wasm.memory.buffer\n  ) {\n    cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer)\n  }\n  return cachegetUint8Memory0\n}\n\nfunction getStringFromWasm0(ptr, len) {\n  return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len))\n}\n\nlet WASM_VECTOR_LEN = 0\n\nfunction passArray8ToWasm0(arg, malloc) {\n  const ptr = malloc(arg.length * 1)\n  getUint8Memory0().set(arg, ptr / 1)\n  WASM_VECTOR_LEN = arg.length\n  return ptr\n}\n\nlet cachegetInt32Memory0 = null\nfunction getInt32Memory0() {\n  if (\n    cachegetInt32Memory0 === null ||\n    cachegetInt32Memory0.buffer !== wasm.memory.buffer\n  ) {\n    cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer)\n  }\n  return cachegetInt32Memory0\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n  return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len)\n}\n/**\n * @param {Uint8Array} data\n * @param {number} level\n * @returns {Uint8Array}\n */\nexport function optimise(data, level) {\n  try {\n    const retptr = wasm.__wbindgen_export_0.value - 16\n    wasm.__wbindgen_export_0.value = retptr\n    var ptr0 = passArray8ToWasm0(data, wasm.__wbindgen_malloc)\n    var len0 = WASM_VECTOR_LEN\n    wasm.optimise(retptr, ptr0, len0, level)\n    var r0 = getInt32Memory0()[retptr / 4 + 0]\n    var r1 = getInt32Memory0()[retptr / 4 + 1]\n    var v1 = getArrayU8FromWasm0(r0, r1).slice()\n    wasm.__wbindgen_free(r0, r1 * 1)\n    return v1\n  } finally {\n    wasm.__wbindgen_export_0.value += 16\n  }\n}\n\nasync function load(module, imports) {\n  if (typeof Response === 'function' && module instanceof Response) {\n    if (typeof WebAssembly.instantiateStreaming === 'function') {\n      try {\n        return await WebAssembly.instantiateStreaming(module, imports)\n      } catch (e) {\n        if (module.headers.get('Content-Type') !== 'application/wasm') {\n          console.warn(\n            '`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n',\n            e\n          )\n        } else {\n          throw e\n        }\n      }\n    }\n\n    const bytes = await module.arrayBuffer()\n    return await WebAssembly.instantiate(bytes, imports)\n  } else {\n    const instance = await WebAssembly.instantiate(module, imports)\n\n    if (instance instanceof WebAssembly.Instance) {\n      return { instance, module }\n    } else {\n      return instance\n    }\n  }\n}\n\nasync function init(input) {\n  if (typeof input === 'undefined') {\n    // input = import.meta.url.replace(/\\.js$/, '_bg.wasm')\n    throw new Error('invariant')\n  }\n  const imports = {}\n  imports.wbg = {}\n  imports.wbg.__wbindgen_throw = function (arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1))\n  }\n\n  if (\n    typeof input === 'string' ||\n    (typeof Request === 'function' && input instanceof Request) ||\n    (typeof URL === 'function' && input instanceof URL)\n  ) {\n    input = fetch(input)\n  }\n\n  const { instance, module } = await load(await input, imports)\n\n  wasm = instance.exports\n  init.__wbindgen_wasm_module = module\n\n  return wasm\n}\n\nexport default init\n\n// Manually remove the wasm and memory references to trigger GC\nexport function cleanup() {\n  wasm = null\n  cachegetUint8Memory0 = null\n  cachegetInt32Memory0 = null\n}\n"]}