{"version":3,"sources":["../../../../../next-server/server/lib/squoosh/codecs.ts"],"names":["mozEncWasm","path","resolve","__dirname","mozDecWasm","webpEncWasm","webpDecWasm","pngEncDecWasm","pngEncDecInit","pngEncDec","default","fsp","readFile","oxipngWasm","oxipngInit","oxipng","resizeWasm","resizeInit","resize","rotateWasm","global","ImageData","resizeNameToIndex","name","Error","resizeWithAspect","input_width","input_height","target_width","target_height","width","height","Math","round","preprocessors","description","instantiate","buffer","method","premultiply","linearRGB","imageData","cleanup","defaultOptions","fitMethod","rotate","numRotations","degrees","sameDimensions","size","instance","WebAssembly","exports","memory","additionalPagesNeeded","ceil","byteLength","grow","view","Uint8ClampedArray","set","Buffer","from","slice","codecs","mozjpeg","extension","detectors","dec","mozDec","enc","mozEnc","defaultEncoderOptions","quality","baseline","arithmetic","progressive","optimize_coding","smoothing","color_space","quant_table","trellis_multipass","trellis_opt_zero","trellis_opt_table","trellis_loops","auto_subsample","chroma_subsample","separate_chroma_quality","chroma_quality","autoOptimize","option","min","max","webp","webpDec","webpEnc","target_size","target_PSNR","sns_strength","filter_strength","filter_sharpness","filter_type","partitions","segments","pass","show_compressed","preprocessing","autofilter","partition_limit","alpha_compression","alpha_filtering","alpha_quality","lossless","exact","image_hint","emulate_jpeg_size","thread_level","low_memory","near_lossless","use_delta_palette","use_sharp_yuv","decode","encode","opts","simplePng","Uint8Array","optimise","level"],"mappings":"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","sourcesContent":["import { promises as fsp } from 'fs'\nimport * as path from 'path'\nimport { instantiateEmscriptenWasm, pathify } from './emscripten-utils.js'\n\n// MozJPEG\n// @ts-ignore\nimport mozEnc from './mozjpeg/mozjpeg_node_enc.js'\nconst mozEncWasm = path.resolve(__dirname, './mozjpeg/mozjpeg_node_enc.wasm')\n// @ts-ignore\nimport mozDec from './mozjpeg/mozjpeg_node_dec.js'\nconst mozDecWasm = path.resolve(__dirname, './mozjpeg/mozjpeg_node_dec.wasm')\n\n// WebP\n// @ts-ignore\nimport webpEnc from './webp/webp_node_enc.js'\nconst webpEncWasm = path.resolve(__dirname, './webp/webp_node_enc.wasm')\n// @ts-ignore\nimport webpDec from './webp/webp_node_dec.js'\nconst webpDecWasm = path.resolve(__dirname, './webp/webp_node_dec.wasm')\n\n// PNG\n// @ts-ignore\nimport * as pngEncDec from './png/squoosh_png.js'\nconst pngEncDecWasm = path.resolve(__dirname, './png/squoosh_png_bg.wasm')\nconst pngEncDecInit = () =>\n  pngEncDec.default(fsp.readFile(pathify(pngEncDecWasm)))\n\n// OxiPNG\n// @ts-ignore\nimport * as oxipng from './png/squoosh_oxipng.js'\nconst oxipngWasm = path.resolve(__dirname, './png/squoosh_oxipng_bg.wasm')\nconst oxipngInit = () => oxipng.default(fsp.readFile(pathify(oxipngWasm)))\n\n// Resize\n// @ts-ignore\nimport * as resize from './resize/squoosh_resize.js'\nconst resizeWasm = path.resolve(__dirname, './resize/squoosh_resize_bg.wasm')\nconst resizeInit = () => resize.default(fsp.readFile(pathify(resizeWasm)))\n\n// rotate\nconst rotateWasm = path.resolve(__dirname, './rotate/rotate.wasm')\n\nimport ImageData from './image_data.js'\n;(global as any).ImageData = ImageData // mandatory for wasm binaries\n\nfunction resizeNameToIndex(\n  name: 'triangle' | 'catrom' | 'mitchell' | 'lanczos3'\n) {\n  switch (name) {\n    case 'triangle':\n      return 0\n    case 'catrom':\n      return 1\n    case 'mitchell':\n      return 2\n    case 'lanczos3':\n      return 3\n    default:\n      throw Error(`Unknown resize algorithm \"${name}\"`)\n  }\n}\n\nfunction resizeWithAspect({\n  input_width,\n  input_height,\n  target_width,\n  target_height,\n}: {\n  input_width: number\n  input_height: number\n  target_width?: number\n  target_height?: number\n}): { width: number; height: number } {\n  if (!target_width && !target_height) {\n    throw Error('Need to specify at least width or height when resizing')\n  }\n  if (target_width && target_height) {\n    return { width: target_width, height: target_height }\n  }\n  if (!target_width) {\n    return {\n      width: Math.round((input_width / input_height) * target_height!),\n      height: target_height!,\n    }\n  }\n  if (!target_height) {\n    return {\n      width: target_width,\n      height: Math.round((input_height / input_width) * target_width),\n    }\n  }\n  throw Error('invariant')\n}\n\nexport const preprocessors = {\n  resize: {\n    name: 'Resize',\n    description: 'Resize the image before compressing',\n    instantiate: async () => {\n      await resizeInit()\n      return (\n        buffer: Buffer | Uint8Array,\n        input_width: number,\n        input_height: number,\n        {\n          width,\n          height,\n          method,\n          premultiply,\n          linearRGB,\n        }: {\n          width?: number\n          height?: number\n          method: 'triangle' | 'catrom' | 'mitchell' | 'lanczos3'\n          premultiply: boolean\n          linearRGB: boolean\n        }\n      ) => {\n        ;({ width, height } = resizeWithAspect({\n          input_width,\n          input_height,\n          target_width: width,\n          target_height: height,\n        }))\n        const imageData = new ImageData(\n          resize.resize(\n            buffer,\n            input_width,\n            input_height,\n            width,\n            height,\n            resizeNameToIndex(method),\n            premultiply,\n            linearRGB\n          ),\n          width,\n          height\n        )\n        resize.cleanup()\n        return imageData\n      }\n    },\n    defaultOptions: {\n      method: 'lanczos3',\n      fitMethod: 'stretch',\n      premultiply: true,\n      linearRGB: true,\n    },\n  },\n  rotate: {\n    name: 'Rotate',\n    description: 'Rotate image',\n    instantiate: async () => {\n      return async (\n        buffer: Buffer | Uint8Array,\n        width: number,\n        height: number,\n        { numRotations }: { numRotations: number }\n      ) => {\n        const degrees = (numRotations * 90) % 360\n        const sameDimensions = degrees === 0 || degrees === 180\n        const size = width * height * 4\n        const { instance } = await WebAssembly.instantiate(\n          await fsp.readFile(pathify(rotateWasm))\n        )\n        const exports = instance.exports as any\n        const { memory } = exports\n        const additionalPagesNeeded = Math.ceil(\n          (size * 2 - memory.buffer.byteLength + 8) / (64 * 1024)\n        )\n        if (additionalPagesNeeded > 0) {\n          memory.grow(additionalPagesNeeded)\n        }\n        const view = new Uint8ClampedArray(memory.buffer)\n        view.set(buffer, 8)\n        exports.rotate(width, height, degrees)\n        return new ImageData(\n          Buffer.from(view.slice(size + 8, size * 2 + 8)),\n          sameDimensions ? width : height,\n          sameDimensions ? height : width\n        )\n      }\n    },\n    defaultOptions: {\n      numRotations: 0,\n    },\n  },\n} as const\n\nexport const codecs = {\n  mozjpeg: {\n    name: 'MozJPEG',\n    extension: 'jpg',\n    detectors: [/^\\xFF\\xD8\\xFF/],\n    dec: () => instantiateEmscriptenWasm(mozDec, mozDecWasm),\n    enc: () => instantiateEmscriptenWasm(mozEnc, mozEncWasm),\n    defaultEncoderOptions: {\n      quality: 75,\n      baseline: false,\n      arithmetic: false,\n      progressive: true,\n      optimize_coding: true,\n      smoothing: 0,\n      color_space: 3 /*YCbCr*/,\n      quant_table: 3,\n      trellis_multipass: false,\n      trellis_opt_zero: false,\n      trellis_opt_table: false,\n      trellis_loops: 1,\n      auto_subsample: true,\n      chroma_subsample: 2,\n      separate_chroma_quality: false,\n      chroma_quality: 75,\n    },\n    autoOptimize: {\n      option: 'quality',\n      min: 0,\n      max: 100,\n    },\n  },\n  webp: {\n    name: 'WebP',\n    extension: 'webp',\n    detectors: [/^RIFF....WEBPVP8[LX ]/],\n    dec: () => instantiateEmscriptenWasm(webpDec, webpDecWasm),\n    enc: () => instantiateEmscriptenWasm(webpEnc, webpEncWasm),\n    defaultEncoderOptions: {\n      quality: 75,\n      target_size: 0,\n      target_PSNR: 0,\n      method: 4,\n      sns_strength: 50,\n      filter_strength: 60,\n      filter_sharpness: 0,\n      filter_type: 1,\n      partitions: 0,\n      segments: 4,\n      pass: 1,\n      show_compressed: 0,\n      preprocessing: 0,\n      autofilter: 0,\n      partition_limit: 0,\n      alpha_compression: 1,\n      alpha_filtering: 1,\n      alpha_quality: 100,\n      lossless: 0,\n      exact: 0,\n      image_hint: 0,\n      emulate_jpeg_size: 0,\n      thread_level: 0,\n      low_memory: 0,\n      near_lossless: 100,\n      use_delta_palette: 0,\n      use_sharp_yuv: 0,\n    },\n    autoOptimize: {\n      option: 'quality',\n      min: 0,\n      max: 100,\n    },\n  },\n  oxipng: {\n    name: 'OxiPNG',\n    extension: 'png',\n    // eslint-disable-next-line no-control-regex\n    detectors: [/^\\x89PNG\\x0D\\x0A\\x1A\\x0A/],\n    dec: async () => {\n      await pngEncDecInit()\n      return {\n        decode: (buffer: Buffer | Uint8Array): Buffer => {\n          const imageData = pngEncDec.decode(buffer)\n          pngEncDec.cleanup()\n          return imageData\n        },\n      } as any\n    },\n    enc: async () => {\n      await pngEncDecInit()\n      await oxipngInit()\n      return {\n        encode: (\n          buffer: Buffer | Uint8Array,\n          width: number,\n          height: number,\n          opts: any\n        ) => {\n          const simplePng = pngEncDec.encode(\n            new Uint8Array(buffer),\n            width,\n            height\n          )\n          const imageData = oxipng.optimise(simplePng, opts.level)\n          oxipng.cleanup()\n          return imageData\n        },\n      }\n    },\n    defaultEncoderOptions: {\n      level: 2,\n    },\n    autoOptimize: {\n      option: 'level',\n      min: 6,\n      max: 1,\n    },\n  },\n} as const\n"]}