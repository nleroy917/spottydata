{"version":3,"sources":["../../../next-server/server/load-components.ts"],"names":["interopDefault","mod","default","loadDefaultErrorComponents","distDir","Document","require","App","ComponentMod","Component","buildManifest","BUILD_MANIFEST","reactLoadableManifest","loadComponents","pathname","serverless","getStaticProps","getStaticPaths","getServerSideProps","pageConfig","config","DocumentMod","AppMod","Promise","all","REACT_LOADABLE_MANIFEST"],"mappings":"+KAAA,2CACA,0BACA,kCAUO,QAASA,CAAAA,cAAT,CAAwBC,GAAxB,CAAkC,CACvC,MAAOA,CAAAA,GAAG,CAACC,OAAJ,EAAeD,GAAtB,CACD,CAsBM,cAAeE,CAAAA,0BAAf,CAA0CC,OAA1C,CAA2D,CAChE,KAAMC,CAAAA,QAAQ,CAAGL,cAAc,CAACM,OAAO,CAAC,2BAAD,CAAR,CAA/B,CACA,KAAMC,CAAAA,GAAG,CAAGP,cAAc,CAACM,OAAO,CAAC,sBAAD,CAAR,CAA1B,CACA,KAAME,CAAAA,YAAY,CAAGF,OAAO,CAAC,wBAAD,CAA5B,CACA,KAAMG,CAAAA,SAAS,CAAGT,cAAc,CAACQ,YAAD,CAAhC,CAEA,MAAO,CACLD,GADK,CAELF,QAFK,CAGLI,SAHK,CAILC,aAAa,CAAEJ,OAAO,CAAC,eAAKF,OAAL,CAAe,YAAWO,yBAAe,EAAzC,CAAD,CAJjB,CAKLC,qBAAqB,CAAE,EALlB,CAMLJ,YANK,CAAP,CAQD,CAEM,cAAeK,CAAAA,cAAf,CACLT,OADK,CAELU,QAFK,CAGLC,UAHK,CAI8B,CACnC,GAAIA,UAAJ,CAAgB,CACd,KAAMN,CAAAA,SAAS,CAAG,KAAM,yBAAYK,QAAZ,CAAsBV,OAAtB,CAA+BW,UAA/B,CAAxB,CACA,GAAI,CAAEC,cAAF,CAAkBC,cAAlB,CAAkCC,kBAAlC,EAAyDT,SAA7D,CAEAO,cAAc,CAAG,KAAMA,CAAAA,cAAvB,CACAC,cAAc,CAAG,KAAMA,CAAAA,cAAvB,CACAC,kBAAkB,CAAG,KAAMA,CAAAA,kBAA3B,CACA,KAAMC,CAAAA,UAAU,CAAG,CAAC,KAAMV,CAAAA,SAAS,CAACW,MAAjB,GAA4B,EAA/C,CAEA,MAAO,CACLX,SADK,CAELU,UAFK,CAGLH,cAHK,CAILC,cAJK,CAKLC,kBALK,CAMLV,YAAY,CAAEC,SANT,CAAP,CAQD,CAED,KAAMY,CAAAA,WAAW,CAAG,KAAM,yBAAY,YAAZ,CAA0BjB,OAA1B,CAAmCW,UAAnC,CAA1B,CACA,KAAMO,CAAAA,MAAM,CAAG,KAAM,yBAAY,OAAZ,CAAqBlB,OAArB,CAA8BW,UAA9B,CAArB,CACA,KAAMP,CAAAA,YAAY,CAAG,KAAM,yBAAYM,QAAZ,CAAsBV,OAAtB,CAA+BW,UAA/B,CAA3B,CAEA,KAAM,CACJL,aADI,CAEJE,qBAFI,CAGJH,SAHI,CAIJJ,QAJI,CAKJE,GALI,EAMF,KAAMgB,CAAAA,OAAO,CAACC,GAAR,CAAY,CACpBlB,OAAO,CAAC,eAAKF,OAAL,CAAcO,yBAAd,CAAD,CADa,CAEpBL,OAAO,CAAC,eAAKF,OAAL,CAAcqB,kCAAd,CAAD,CAFa,CAGpBzB,cAAc,CAACQ,YAAD,CAHM,CAIpBR,cAAc,CAACqB,WAAD,CAJM,CAKpBrB,cAAc,CAACsB,MAAD,CALM,CAAZ,CANV,CAcA,KAAM,CAAEJ,kBAAF,CAAsBF,cAAtB,CAAsCC,cAAtC,EAAyDT,YAA/D,CAEA,MAAO,CACLD,GADK,CAELF,QAFK,CAGLI,SAHK,CAILC,aAJK,CAKLE,qBALK,CAMLO,UAAU,CAAEX,YAAY,CAACY,MAAb,EAAuB,EAN9B,CAOLZ,YAPK,CAQLU,kBARK,CASLF,cATK,CAULC,cAVK,CAAP,CAYD","sourcesContent":["import { BUILD_MANIFEST, REACT_LOADABLE_MANIFEST } from '../lib/constants'\nimport { join } from 'path'\nimport { requirePage } from './require'\nimport { BuildManifest } from './get-page-files'\nimport { AppType, DocumentType } from '../lib/utils'\nimport {\n  PageConfig,\n  GetStaticPaths,\n  GetServerSideProps,\n  GetStaticProps,\n} from 'next/types'\n\nexport function interopDefault(mod: any) {\n  return mod.default || mod\n}\n\nexport type ManifestItem = {\n  id: number | string\n  files: string[]\n}\n\ntype ReactLoadableManifest = { [moduleId: string]: ManifestItem }\n\nexport type LoadComponentsReturnType = {\n  Component: React.ComponentType\n  pageConfig?: PageConfig\n  buildManifest: BuildManifest\n  reactLoadableManifest: ReactLoadableManifest\n  Document: DocumentType\n  App: AppType\n  getStaticProps?: GetStaticProps\n  getStaticPaths?: GetStaticPaths\n  getServerSideProps?: GetServerSideProps\n  ComponentMod: any\n}\n\nexport async function loadDefaultErrorComponents(distDir: string) {\n  const Document = interopDefault(require('next/dist/pages/_document'))\n  const App = interopDefault(require('next/dist/pages/_app'))\n  const ComponentMod = require('next/dist/pages/_error')\n  const Component = interopDefault(ComponentMod)\n\n  return {\n    App,\n    Document,\n    Component,\n    buildManifest: require(join(distDir, `fallback-${BUILD_MANIFEST}`)),\n    reactLoadableManifest: {},\n    ComponentMod,\n  }\n}\n\nexport async function loadComponents(\n  distDir: string,\n  pathname: string,\n  serverless: boolean\n): Promise<LoadComponentsReturnType> {\n  if (serverless) {\n    const Component = await requirePage(pathname, distDir, serverless)\n    let { getStaticProps, getStaticPaths, getServerSideProps } = Component\n\n    getStaticProps = await getStaticProps\n    getStaticPaths = await getStaticPaths\n    getServerSideProps = await getServerSideProps\n    const pageConfig = (await Component.config) || {}\n\n    return {\n      Component,\n      pageConfig,\n      getStaticProps,\n      getStaticPaths,\n      getServerSideProps,\n      ComponentMod: Component,\n    } as LoadComponentsReturnType\n  }\n\n  const DocumentMod = await requirePage('/_document', distDir, serverless)\n  const AppMod = await requirePage('/_app', distDir, serverless)\n  const ComponentMod = await requirePage(pathname, distDir, serverless)\n\n  const [\n    buildManifest,\n    reactLoadableManifest,\n    Component,\n    Document,\n    App,\n  ] = await Promise.all([\n    require(join(distDir, BUILD_MANIFEST)),\n    require(join(distDir, REACT_LOADABLE_MANIFEST)),\n    interopDefault(ComponentMod),\n    interopDefault(DocumentMod),\n    interopDefault(AppMod),\n  ])\n\n  const { getServerSideProps, getStaticProps, getStaticPaths } = ComponentMod\n\n  return {\n    App,\n    Document,\n    Component,\n    buildManifest,\n    reactLoadableManifest,\n    pageConfig: ComponentMod.config || {},\n    ComponentMod,\n    getServerSideProps,\n    getStaticProps,\n    getStaticPaths,\n  }\n}\n"]}