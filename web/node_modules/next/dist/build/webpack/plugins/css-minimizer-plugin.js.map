{"version":3,"sources":["../../../../build/webpack/plugins/css-minimizer-plugin.ts"],"names":["CSS_REGEX","CssMinimizerPlugin","constructor","options","__next_css_remove","optimizeAsset","file","asset","postcssOptions","to","from","parser","postcssScss","input","map","sourceAndMap","source","prev","cssnanoSimple","process","then","res","sources","SourceMapSource","css","toJSON","RawSource","apply","compiler","hooks","compilation","tap","isWebpack5","cache","getCache","processAssets","tapPromise","name","stage","webpack","Compilation","PROCESS_ASSETS_STAGE_OPTIMIZE_SIZE","assets","compilerSpan","spans","get","cssMinimizerSpan","id","setAttribute","traceAsyncFn","files","Object","keys","Promise","all","filter","test","assetSpan","etag","getLazyHashedEtag","cachedResult","getPromise","result","storePromise","optimizeChunkAssets","chunks","reduce","acc","chunk","concat","entry"],"mappings":"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","sourcesContent":["import cssnanoSimple from 'cssnano-simple'\nimport postcssScss from 'next/dist/compiled/postcss-scss'\nimport postcss, { Parser } from 'postcss'\nimport {\n  webpack,\n  isWebpack5,\n  sources,\n} from 'next/dist/compiled/webpack/webpack'\nimport { trace } from '../../../telemetry/trace'\nimport { spans } from './profiling-plugin'\n\n// https://github.com/NMFR/optimize-css-assets-webpack-plugin/blob/0a410a9bf28c7b0e81a3470a13748e68ca2f50aa/src/index.js#L20\nconst CSS_REGEX = /\\.css(\\?.*)?$/i\n\ntype CssMinimizerPluginOptions = {\n  postcssOptions: {\n    map: false | { prev?: string | false; inline: boolean; annotation: boolean }\n  }\n}\n\nexport class CssMinimizerPlugin {\n  __next_css_remove = true\n\n  private options: CssMinimizerPluginOptions\n\n  constructor(options: CssMinimizerPluginOptions) {\n    this.options = options\n  }\n\n  optimizeAsset(file: string, asset: any) {\n    const postcssOptions = {\n      ...this.options.postcssOptions,\n      to: file,\n      from: file,\n\n      // We don't actually add this parser to support Sass. It can also be used\n      // for inline comment support. See the README:\n      // https://github.com/postcss/postcss-scss/blob/master/README.md#2-inline-comments-for-postcss\n      parser: (postcssScss as any) as Parser,\n    }\n\n    let input: string\n    if (postcssOptions.map && asset.sourceAndMap) {\n      const { source, map } = asset.sourceAndMap()\n      input = source\n      postcssOptions.map.prev = map ? map : false\n    } else {\n      input = asset.source()\n    }\n\n    return postcss([cssnanoSimple])\n      .process(input, postcssOptions)\n      .then((res) => {\n        if (res.map) {\n          return new sources.SourceMapSource(res.css, file, res.map.toJSON())\n        } else {\n          return new sources.RawSource(res.css)\n        }\n      })\n  }\n\n  apply(compiler: webpack.Compiler) {\n    compiler.hooks.compilation.tap('CssMinimizerPlugin', (compilation: any) => {\n      if (isWebpack5) {\n        const cache = compilation.getCache('CssMinimizerPlugin')\n        compilation.hooks.processAssets.tapPromise(\n          {\n            name: 'CssMinimizerPlugin',\n            // @ts-ignore TODO: Remove ignore when webpack 5 is stable\n            stage: webpack.Compilation.PROCESS_ASSETS_STAGE_OPTIMIZE_SIZE,\n          },\n          async (assets: any) => {\n            const compilerSpan = spans.get(compiler)\n            const cssMinimizerSpan = trace(\n              'css-minimizer-plugin',\n              compilerSpan?.id\n            )\n            cssMinimizerSpan.setAttribute('webpackVersion', 5)\n\n            return cssMinimizerSpan.traceAsyncFn(async () => {\n              const files = Object.keys(assets)\n              await Promise.all(\n                files\n                  .filter((file) => CSS_REGEX.test(file))\n                  .map(async (file) => {\n                    const assetSpan = trace('minify-css', cssMinimizerSpan.id)\n                    assetSpan.setAttribute('file', file)\n\n                    return assetSpan.traceAsyncFn(async () => {\n                      const asset = assets[file]\n\n                      const etag = cache.getLazyHashedEtag(asset)\n\n                      const cachedResult = await cache.getPromise(file, etag)\n\n                      assetSpan.setAttribute(\n                        'cache',\n                        cachedResult ? 'HIT' : 'MISS'\n                      )\n                      if (cachedResult) {\n                        assets[file] = cachedResult\n                        return\n                      }\n\n                      const result = await this.optimizeAsset(file, asset)\n                      await cache.storePromise(file, etag, result)\n                      assets[file] = result\n                    })\n                  })\n              )\n            })\n          }\n        )\n        return\n      }\n      compilation.hooks.optimizeChunkAssets.tapPromise(\n        'CssMinimizerPlugin',\n        (chunks: webpack.compilation.Chunk[]) => {\n          const compilerSpan = spans.get(compiler)\n          const cssMinimizerSpan = trace(\n            'css-minimizer-plugin',\n            compilerSpan?.id\n          )\n          cssMinimizerSpan.setAttribute('webpackVersion', 4)\n          cssMinimizerSpan.setAttribute('compilationName', compilation.name)\n\n          return cssMinimizerSpan.traceAsyncFn(async () => {\n            return await Promise.all(\n              chunks\n                .reduce(\n                  (acc, chunk) => acc.concat(chunk.files || []),\n                  [] as string[]\n                )\n                .filter((entry) => CSS_REGEX.test(entry))\n                .map(async (file) => {\n                  const assetSpan = trace('minify-css', cssMinimizerSpan.id)\n                  assetSpan.setAttribute('file', file)\n\n                  return assetSpan.traceAsyncFn(async () => {\n                    const asset = compilation.assets[file]\n                    // Makes trace attributes the same as webpack 5\n                    // When using webpack 4 the result is not cached\n                    assetSpan.setAttribute('cache', 'MISS')\n                    compilation.assets[file] = await this.optimizeAsset(\n                      file,\n                      asset\n                    )\n                  })\n                })\n            )\n          })\n        }\n      )\n    })\n  }\n}\n"]}